# doctest_in_help.txt
===============================
 How to Use 2-matrix_divided.py
===============================

This module is very simple, since it only has one function called
``matrix_divided``.

Numbers
=======

``matrix_divided()`` returns a new matrix divided by the param div

Check for normal conditions: matrix full of numbers, and div is a number

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Check for special conditions:

::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 'str')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

::

    >>> matrix = [[1, 'str', 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

::

    >>> matrix_divided(0, 3)
    -1